# Generated by Django 4.2.5 on 2024-08-04 11:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("v_superuser", "0003_alter_profile_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="CameraConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("path", models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ColorsClassName",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "class_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="v_superuser.classname",
                    ),
                ),
            ],
            options={
                "verbose_name": "Colors / Class name (superuser)",
                "verbose_name_plural": "Colors / Class name (superuser)",
            },
        ),
        migrations.CreateModel(
            name="ColorsConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "color_name",
                    models.CharField(
                        choices=[
                            ("Maroon", "Maroon"),
                            ("Brown", "Brown"),
                            ("Olive", "Olive"),
                            ("Teal", "Teal"),
                            ("Navy", "Navy"),
                            ("Black", "Black"),
                            ("Red", "Red"),
                            ("Orange", "Orange"),
                            ("Yellow", "Yellow"),
                            ("Lime", "Lime"),
                            ("Green", "Green"),
                            ("Cyan", "Cyan"),
                            ("Blue", "Blue"),
                            ("Purple", "Purple"),
                            ("Magenta", "Magenta"),
                            ("Grey", "Grey"),
                            ("Pink", "Pink"),
                            ("Apricot", "Apricot"),
                            ("Beige", "Beige"),
                            ("Mint", "Mint"),
                            ("Lavender", "Lavender"),
                            ("White", "White"),
                        ],
                        max_length=50,
                    ),
                ),
                ("path", models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="CommonConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="TextConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(max_length=500)),
                (
                    "class_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="text_configs",
                        to="v_superuser.classname",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TextAttrs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=50)),
                ("text_for_onvif", models.CharField(max_length=50)),
                ("text_for_telegram", models.CharField(max_length=50)),
                (
                    "model_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="model_attrs",
                        to="v_superuser.modelsname",
                    ),
                ),
                (
                    "text_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attrs",
                        to="gstream.textconfig",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RGB",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.BigIntegerField()),
                (
                    "config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rgbs",
                        to="gstream.colorsconfig",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModelsConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "model_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configs",
                        to="v_superuser.modelsname",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModelParams",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(max_length=50)),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="Модель для обнаружения скелетов",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("conf", models.FloatField()),
                ("conf_keypoints", models.FloatField(blank=True, null=True)),
                ("conf_hand_up", models.FloatField(blank=True, null=True)),
                ("imgsz", models.IntegerField()),
                ("high_text", models.FloatField()),
                ("size_points", models.IntegerField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("model_pose_yolo", "Model Pose Yolo"),
                            ("need_skeleton", "Need Skeleton"),
                            ("model_yolo", "Model Yolo"),
                        ],
                        max_length=30,
                    ),
                ),
                ("task", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "classes",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="+",
                        to="v_superuser.classesnumber",
                    ),
                ),
                (
                    "colors",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="+",
                        to="gstream.colorsclassname",
                    ),
                ),
                (
                    "models_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configs",
                        to="gstream.modelsconfig",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CommonAttrs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("logging_level", models.CharField(max_length=50)),
                ("status_bus_messages", models.BooleanField(default=True)),
                ("level_debug", models.IntegerField(blank=True, null=True)),
                ("time_live_client", models.IntegerField(blank=True, null=True)),
                ("port_for_onvif", models.IntegerField(blank=True, null=True)),
                ("draw_results_detect", models.BooleanField(default=True)),
                ("draw_results_detect_full", models.BooleanField(default=False)),
                (
                    "type_protocol",
                    models.CharField(
                        choices=[("rtsp_rts", "Rtsp Rts"), ("hls", "Hls")],
                        default="rtsp_rts",
                        max_length=50,
                    ),
                ),
                ("telegram_works", models.BooleanField(default=True)),
                ("onvif_works", models.BooleanField(default=True)),
                ("ip_server", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "device",
                    models.CharField(
                        choices=[("auto", "Auto"), ("cuda", "Cuda"), ("cpu", "Cpu")],
                        default="auto",
                        max_length=50,
                    ),
                ),
                ("start_rtsp_video_stream", models.BooleanField(default=True)),
                ("device_id", models.CharField(blank=True, max_length=50, null=True)),
                ("fps", models.IntegerField(blank=True, null=True)),
                ("image_width", models.IntegerField(blank=True, null=True)),
                ("image_height", models.IntegerField(blank=True, null=True)),
                ("port", models.IntegerField(blank=True, null=True)),
                ("stream_uri", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "cameras",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="+",
                        to="gstream.cameraconfig",
                    ),
                ),
                (
                    "common_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attrs",
                        to="gstream.commonconfig",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="colorsclassname",
            name="color",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="gstream.colorsconfig"
            ),
        ),
        migrations.CreateModel(
            name="CameraAttrs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("location_rtspsrc", models.CharField(max_length=50)),
                ("location_description", models.CharField(max_length=50)),
                ("framerate", models.IntegerField()),
                ("hlssink_width", models.IntegerField()),
                ("hlssink_height", models.IntegerField()),
                ("video_width", models.IntegerField()),
                ("video_height", models.IntegerField()),
                ("port", models.IntegerField()),
                (
                    "quality",
                    models.CharField(
                        choices=[("low", "Low"), ("high", "High")],
                        default="low",
                        max_length=50,
                    ),
                ),
                ("opencv_output_width", models.IntegerField()),
                ("opencv_output_height", models.IntegerField()),
                ("user_id", models.CharField(blank=True, max_length=50, null=True)),
                ("user_pw", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "camera_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configs",
                        to="gstream.cameraconfig",
                    ),
                ),
                (
                    "model_names",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="+",
                        to="v_superuser.modelsname",
                    ),
                ),
                (
                    "profiles",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="+",
                        to="v_superuser.profile",
                    ),
                ),
            ],
        ),
    ]
